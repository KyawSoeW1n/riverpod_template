// Mocks generated by Mockito 5.4.4 from annotations
// in riverpod_testing/test/get_post_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_testing/data_model/cache/cache_post.dart' as _i3;
import 'package:riverpod_testing/data_source/network/posts/post_remote_datasource.dart'
    as _i4;
import 'package:riverpod_testing/domain/fetch_posts/fetch_posts_usecase.dart'
    as _i6;
import 'package:riverpod_testing/mapper/posts_mapper.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PostMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostMapper extends _i1.Mock implements _i2.PostMapper {
  MockPostMapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.CachePost> mapFromResponse(List<dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapFromResponse,
          [data],
        ),
        returnValue: <_i3.CachePost>[],
      ) as List<_i3.CachePost>);
}

/// A class which mocks [PostsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRemoteDataSource extends _i1.Mock
    implements _i4.PostsRemoteDataSource {
  MockPostsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.CachePost>> getPostList() => (super.noSuchMethod(
        Invocation.method(
          #getPostList,
          [],
        ),
        returnValue: _i5.Future<List<_i3.CachePost>>.value(<_i3.CachePost>[]),
      ) as _i5.Future<List<_i3.CachePost>>);
}

/// A class which mocks [FetchPostsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchPostsUseCase extends _i1.Mock implements _i6.FetchPostsUseCase {
  MockFetchPostsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> fetchPostList() => (super.noSuchMethod(
        Invocation.method(
          #fetchPostList,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
